"""
Django settings for hotel project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#0#c5glk)ve(0^xtxglknxee)(ic(u^pya-5va3%^tw!vmd^pz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#允许谁访问
ALLOWED_HOSTS = []


# Application definition

#new 注册app
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sonapp',
    'upload_test',
    #new 前后端跨域
    'corsheaders',
    'user',
    'info',
    'roomlist',
    'payment',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #new 前后端分离跨域使用
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    #{% csrf_token %} @csrf_exempt
    #前后端分离不用这个
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #new中间件注册
    # 'middleware.mymiddleware.VisitLimit',
]

ROOT_URLCONF = 'hotel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #new不写从主目录开始找templates,写了从注册app找templates
        #有子应用就配
        #os.path.join(BASE_DIR,'templates'),
        'DIRS': [os.path.join(BASE_DIR,'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hotel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

#new数据库设置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cuidb',
        'USER':'root',
        'PASSWORD':'123456',
        'HOST':'127.0.0.1',
        'PORT': 3306,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

#new中文
LANGUAGE_CODE = 'zh-Hans'
#中国时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

#new静态文件路径
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

#media资源路径
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media')

#new缓存设置 缓存复杂计算结果储存在数据库中需要创建缓存表
#python3 manage.py createcachetable
# CACHES = {
#
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'my_cache_table',
#         'TIMEOUT': 300,  #缓存保存时间 单位秒，默认值为300,
#         'OPTIONS':{
#             'MAX_ENTRIES': 300, #缓存最大数据条数
#             'CULL_FREQUENCY': 2,#缓存条数达到最大值时 删除1/x的缓存数据
#         }
#     },
#     'other': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'my_cache_table',
#         'TIMEOUT': 300,  #缓存保存时间 单位秒，默认值为300,
#         'OPTIONS':{
#             'MAX_ENTRIES': 300, #缓存最大数据条数
#             'CULL_FREQUENCY': 2,#缓存条数达到最大值时 删除1/x的缓存数据
#         }
#     },
#
# }

#文件系统缓存(少用)
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': '/var/tmp/django_cache',#这个是文件夹的路径
#         #'LOCATION': 'c:\test\cache',#windows下示例
#     }
# }


#本地内存缓存(较常用)
# CACHES = {
#     'default': {
#         # .LocMemCache--dajango本身缓存,常用redis替代(最常用)--一般在view中使用
#         'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
#         'LOCATION': 'unique-snowflake'
#     }
# }


#redis 缓存
CACHES = {
    'default': {

        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379',
        'OPTIONS': {
                      "CLIENT_CLASS":"django_redis.client.DefaultClient",
                    #"PASSWORD":"123456"
            }
    }
}



#QQ邮箱 pop3服务gdqxweydmgvfbghh
# 发送邮件设置
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # 固定写法
# EMAIL_HOST = 'smtp.qq.com' # 腾讯QQ邮箱 SMTP 服务器地址
# EMAIL_PORT = 25  # SMTP服务的端口号
# EMAIL_HOST_USER = '511517077@qq.com'  # 发送邮件的QQ邮箱
# EMAIL_HOST_PASSWORD = 'gdqxweydmgvfbghh'  # 在QQ邮箱->设置->帐户->“POP3/IMAP......服务” 里得到的在第三方登录QQ邮箱授权码
# EMAIL_USE_TLS = False  # 与SMTP服务器通信时，是否启动TLS链接(安全链接)默认false
#from django.core import mail
# mail.send_mail(
#             subject,  #题目
#             message,  # 消息内容
#             from_email,  # 发送者[当前配置邮箱]
#             recipient_list=['xxx@qq.com'],  # 接收者邮件列表
#             )

CORS_ORIGIN_ALLOW_ALL=True
#布尔值如果为True白名单不启用

# CORS_ORIGIN_WHITELIST = [
#     "https://example.com"
# ]

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',

)
# 如果想要自定义的浏览器储存值跨域需要注册
CORS_ALLOW_HEADERS = (
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'username',
    'hotelplace',
    'hotelname',
    'roomnumber',

)
#CORS_PREFLIGHT_MAX_AGE
#默认86400s
#扩展头
#CORS_EXPOSE_HEADERS[]
#cookie是否自动提交
#CORS_ALLOW_CREDENTIALS #布尔值， 默认False

#token共享秘钥
JWT_TOKEN_KEY="cyrtoken"
#new
# APPEND_SLASH=False

SMS_ACCOUNT_ID = '8aaf0708732220a601743961e2417654'
SMS_ACCOUNT_TOKEN = 'b0ead29e694c40b6aabd76fb0bbfd164'
SMS_APP_ID = '8aaf0708732220a601743961e2c6765a'
SMS_TEMPLATE_ID = '1'

ALIPAY_APP_ID = '2021000118640927'
ALIPAY_KEY_DIR = os.path.join(BASE_DIR,'static/key_file/')
ALIPAY_RETURN_URL='http://127.0.0.1:8000/payment/result/'
#实际生产环境下不同上面的url控制返回页面下面的url返回订单结果信息
ALIPAY_NOTIFY_URL='http://127.0.0.1:8000/payment/result/'

"""买家账号sranhs7794@sandbox.com
登录密码111111
支付密码111111
用户名称沙箱环境
证件类型身份证(IDENTITY_CARD)
证件号码221646197510208350
账户余额
97801.00充值取现"""